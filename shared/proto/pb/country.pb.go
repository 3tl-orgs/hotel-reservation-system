// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: shared/proto/country.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetCountryByIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCountryByIdRequest) Reset() {
	*x = GetCountryByIdRequest{}
	mi := &file_shared_proto_country_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCountryByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountryByIdRequest) ProtoMessage() {}

func (x *GetCountryByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_country_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCountryByIdRequest.ProtoReflect.Descriptor instead.
func (*GetCountryByIdRequest) Descriptor() ([]byte, []int) {
	return file_shared_proto_country_proto_rawDescGZIP(), []int{0}
}

func (x *GetCountryByIdRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CountryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Code          string                 `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountryResponse) Reset() {
	*x = CountryResponse{}
	mi := &file_shared_proto_country_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountryResponse) ProtoMessage() {}

func (x *CountryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_country_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountryResponse.ProtoReflect.Descriptor instead.
func (*CountryResponse) Descriptor() ([]byte, []int) {
	return file_shared_proto_country_proto_rawDescGZIP(), []int{1}
}

func (x *CountryResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CountryResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CountryResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

var File_shared_proto_country_proto protoreflect.FileDescriptor

const file_shared_proto_country_proto_rawDesc = "" +
	"\n" +
	"\x1ashared/proto/country.proto\x12\acountry\"'\n" +
	"\x15GetCountryByIdRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"I\n" +
	"\x0fCountryResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04code\x18\x03 \x01(\tR\x04code2_\n" +
	"\x0eCountryService\x12M\n" +
	"\x11GetCountryByIdHdl\x12\x1e.country.GetCountryByIdRequest\x1a\x18.country.CountryResponseB\x06Z\x04./pbb\x06proto3"

var (
	file_shared_proto_country_proto_rawDescOnce sync.Once
	file_shared_proto_country_proto_rawDescData []byte
)

func file_shared_proto_country_proto_rawDescGZIP() []byte {
	file_shared_proto_country_proto_rawDescOnce.Do(func() {
		file_shared_proto_country_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_shared_proto_country_proto_rawDesc), len(file_shared_proto_country_proto_rawDesc)))
	})
	return file_shared_proto_country_proto_rawDescData
}

var file_shared_proto_country_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_shared_proto_country_proto_goTypes = []any{
	(*GetCountryByIdRequest)(nil), // 0: country.GetCountryByIdRequest
	(*CountryResponse)(nil),       // 1: country.CountryResponse
}
var file_shared_proto_country_proto_depIdxs = []int32{
	0, // 0: country.CountryService.GetCountryByIdHdl:input_type -> country.GetCountryByIdRequest
	1, // 1: country.CountryService.GetCountryByIdHdl:output_type -> country.CountryResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_shared_proto_country_proto_init() }
func file_shared_proto_country_proto_init() {
	if File_shared_proto_country_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_shared_proto_country_proto_rawDesc), len(file_shared_proto_country_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_shared_proto_country_proto_goTypes,
		DependencyIndexes: file_shared_proto_country_proto_depIdxs,
		MessageInfos:      file_shared_proto_country_proto_msgTypes,
	}.Build()
	File_shared_proto_country_proto = out.File
	file_shared_proto_country_proto_goTypes = nil
	file_shared_proto_country_proto_depIdxs = nil
}
